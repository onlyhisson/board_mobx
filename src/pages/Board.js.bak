import React, { Component } from 'react';
import { decorate, observable, action } from 'mobx'
import { observer } from 'mobx-react'
import Config from '../config/common.json'

import '../public/vendor/bootstrap/css/bootstrap.min.css';
import '../public/css/shop-item.css';

import MainImage from '../components/MainImage';
import PostList from '../components/PostList';
import PostDetail from '../components/PostDetail';

/* 게시판 리스트 + 게시글 리스트 영역 */
class Board extends Component {

    constructor(props) {
        super(props)
        this.state = {
            showImage: true,        // 초기 페이지 진입시 메인 이미지 노출 여부
            showPostList: false,    // 초기 페이지 진입시 게시글 리스트 노출 여부
            showPostDetail: false,  // 초기 선택된 게시글 상세 info UI 노출 여부
            boardList: [],          // 게시판 리스트
            postList: [],           // 해당 게시판 게시글 리스트
            postDetail: {},         // 선택된 게시글 상세 info 객체
            showCheckbox : {        
                display: "none"     // 체크 박스 노출 여부
            }
        }
    }

    componentDidMount() {
        let url = Config.serverHost + ':' + Config.serverPort + '/board/boardList'
        fetch(url, {
            method: 'GET',
            headers: {'Content-Type':'application/json'}
        })
        .then((response) => response.json())
        .then((result) => this.setState({boardList: result.boardList}))
        .catch((error) => console.log("API Call error" + error))
    }

    /* 좌측 게시판 선택시 해당 카테고리의 게시글 리스트 get */
    handleClick(event) {
        let id = event.target.href.split('id=')[1]  // **** 수정해야함
        let url = Config.serverHost + ':' + Config.serverPort + '/board/postList/' + id;
        fetch(url, {
            method: 'GET',
            headers: {'Content-Type':'application/json'}
        })
        .then((response) => response.json())
        .then((result) => this.setState({
            showImage: false,
            showPostList: true,
            showPostDetail: false, 
            postDetail: {},
            postList: result.postList,
            showCheckbox : {        
                display: "none"     // 체크 박스 노출 여부
            }
        }))
        event.preventDefault();     // html url 막기
    }

    /* 게시물 선택시 해당 게시물 상세 데이터 get */
    handleClickPost(event) {
        let id = event.target.href.split('id=')[1]
        let url = Config.serverHost + ':' + Config.serverPort + '/board/post/' + id;
        fetch(url, {
            method: 'GET',
            headers: {'Content-Type':'application/json'}
        })
        .then((response) => response.json())
        .then((result) => {
            this.setState({
                showPostList: false,
                showPostDetail: true,
                postDetail: result.postDetail
            })
        })
        event.preventDefault();     // html url 막기
    }

    render() {
        return (
            <div className="container">
                <div className="row">
                    <div className="col-lg-3">
                        <h1 className="my-4">게시판</h1>
                        <div className="list-group">
                            {this.state.boardList.map((v,i) => {
                                return (
                                    <a key={i} onClick={(e)=>this.handleClick(e)} className="list-group-item" href={`id=${v.board_seq}`}>
                                        {v.board_name}
                                    </a>
                                ) 
                            })}
                        </div>
                    </div>    
                    <div className="col-lg-9">
                        <MainImage display={this.state.showImage}/>
                        <PostList   display={this.state.showPostList} 
                                    postList={this.state.postList} 
                                    showCheckbox={this.state.showCheckbox}
                                    handler={(e)=>this.handleClickPost(e)}/>
                        <PostDetail display={this.state.showPostDetail} postDetail={this.state.postDetail}/>
                    </div>
                </div>
            </div>
        )
    }
}

export default Board;